#include <common/cryptomsg.h>
#include <common/channel_config.h>
#include <common/derive_basepoints.h>
#include <common/per_peer_state.h>

msgtype,opening_init,6000
# Which network are we configured for?
msgdata,opening_init,chain_hash,bitcoin_blkid,
# Base configuration we'll offer (channel reserve will vary with amount)
msgdata,opening_init,our_config,channel_config,
# Minimum/maximum configuration values we'll accept
msgdata,opening_init,max_to_self_delay,u32,
msgdata,opening_init,min_effective_htlc_capacity_msat,amount_msat,
msgdata,opening_init,pps,per_peer_state,
msgdata,opening_init,our_basepoints,basepoints,
msgdata,opening_init,our_funding_pubkey,pubkey,
# Constraints in case the other end tries to open a channel.
msgdata,opening_init,minimum_depth,u32,
msgdata,opening_init,min_feerate,u32,
msgdata,opening_init,max_feerate,u32,
msgdata,opening_init,lfeatures_len,u16,
msgdata,opening_init,lfeatures,u8,lfeatures_len
# Optional msg to send.
msgdata,opening_init,len,u16,
msgdata,opening_init,msg,u8,len

# Openingd->master: they offered channel, should we continue?
msgtype,opening_got_offer,6005
msgdata,opening_got_offer,funding_satoshis,amount_sat,
msgdata,opening_got_offer,push_msat,amount_msat,
msgdata,opening_got_offer,dust_limit_satoshis,amount_sat,
msgdata,opening_got_offer,max_htlc_value_in_flight_msat,amount_msat,
msgdata,opening_got_offer,channel_reserve_satoshis,amount_sat,
msgdata,opening_got_offer,htlc_minimum_msat,amount_msat,
msgdata,opening_got_offer,feerate_per_kw,u32,
msgdata,opening_got_offer,to_self_delay,u16,
msgdata,opening_got_offer,max_accepted_htlcs,u16,
msgdata,opening_got_offer,channel_flags,u8,
msgdata,opening_got_offer,shutdown_len,u16,
msgdata,opening_got_offer,shutdown_scriptpubkey,u8,shutdown_len
# master->openingd: optional rejection message
msgtype,opening_got_offer_reply,6105
msgdata,opening_got_offer_reply,rejection,?wirestring,

#include <common/bip32.h>
#include <common/htlc_wire.h>
# Master->openingd: please fund a channel.
msgtype,opening_funder,6001
msgdata,opening_funder,funding_satoshis,amount_sat,
msgdata,opening_funder,push_msat,amount_msat,
msgdata,opening_funder,feerate_per_kw,u32,
msgdata,opening_funder,change_satoshis,amount_sat,
msgdata,opening_funder,change_keyindex,u32,
msgdata,opening_funder,channel_flags,u8,
#include <common/utxo.h>
msgdata,opening_funder,num_inputs,u16,
msgdata,opening_funder,inputs,utxo,num_inputs
msgdata,opening_funder,bip32,ext_key,

# Openingd->master: we've successfully offered channel.
# This gives their sig, means we can broadcast tx: we're done.
msgtype,opening_funder_reply,6101
msgdata,opening_funder_reply,their_config,channel_config,
msgdata,opening_funder_reply,first_commit,bitcoin_tx,
msgdata,opening_funder_reply,first_commit_sig,bitcoin_signature,
msgdata,opening_funder_reply,pps,per_peer_state,
msgdata,opening_funder_reply,revocation_basepoint,pubkey,
msgdata,opening_funder_reply,payment_basepoint,pubkey,
msgdata,opening_funder_reply,htlc_basepoint,pubkey,
msgdata,opening_funder_reply,delayed_payment_basepoint,pubkey,
msgdata,opening_funder_reply,their_per_commit_point,pubkey,
msgdata,opening_funder_reply,minimum_depth,u32,
msgdata,opening_funder_reply,remote_fundingkey,pubkey,
msgdata,opening_funder_reply,funding_txid,bitcoin_txid,
msgdata,opening_funder_reply,funding_txout,u16,
msgdata,opening_funder_reply,feerate_per_kw,u32,
msgdata,opening_funder_reply,our_channel_reserve_satoshis,amount_sat,
msgdata,opening_funder_reply,shutdown_len,u16,
msgdata,opening_funder_reply,shutdown_scriptpubkey,u8,shutdown_len

# master->openingd: start channel establishment for a funding
# tx that will be paid for by an external wallet
msgtype,opening_funder_start,6002
msgdata,opening_funder_start,funding_satoshis,amount_sat,
msgdata,opening_funder_start,push_msat,amount_msat,
msgdata,opening_funder_start,feerate_per_kw,u32,
msgdata,opening_funder_start,channel_flags,u8,

# openingd->master: send back output script for 2-of-2 funding output
msgtype,opening_funder_start_reply,6102
msgdata,opening_funder_start_reply,script_len,u8,
msgdata,opening_funder_start_reply,scriptpubkey,u8,script_len

# master->openingd: complete channel establishment for a funding
# tx that will be paid for by an external wallet
# response to this is a normal `opening_funder_reply` ??
msgtype,opening_funder_complete,6012
msgdata,opening_funder_complete,funding_txid,bitcoin_txid,
msgdata,opening_funder_complete,funding_txout,u16,

#master->openingd: cancel channel establishment for a funding
msgtype,opening_funder_cancel,6013

# Openingd->master: we failed to negotiation channel
msgtype,opening_funder_failed,6004
msgdata,opening_funder_failed,reason,wirestring,

# Openingd->master: they offered channel.
# This gives their txid and info, means we can send funding_signed: we're done.
msgtype,opening_fundee,6003
msgdata,opening_fundee,their_config,channel_config,
msgdata,opening_fundee,first_commit,bitcoin_tx,
msgdata,opening_fundee,first_commit_sig,bitcoin_signature,
msgdata,opening_fundee,pps,per_peer_state,
msgdata,opening_fundee,revocation_basepoint,pubkey,
msgdata,opening_fundee,payment_basepoint,pubkey,
msgdata,opening_fundee,htlc_basepoint,pubkey,
msgdata,opening_fundee,delayed_payment_basepoint,pubkey,
msgdata,opening_fundee,their_per_commit_point,pubkey,
msgdata,opening_fundee,remote_fundingkey,pubkey,
msgdata,opening_fundee,funding_txid,bitcoin_txid,
msgdata,opening_fundee,funding_txout,u16,
msgdata,opening_fundee,funding_satoshis,amount_sat,
msgdata,opening_fundee,push_msat,amount_msat,
msgdata,opening_fundee,channel_flags,u8,
msgdata,opening_fundee,feerate_per_kw,u32,
# The funding signed message: send this and we're committed.
msgdata,opening_fundee,msglen,u16,
msgdata,opening_fundee,funding_signed_msg,u8,msglen
msgdata,opening_fundee,our_channel_reserve_satoshis,amount_sat,
msgdata,opening_fundee,shutdown_len,u16,
msgdata,opening_fundee,shutdown_scriptpubkey,u8,shutdown_len

# openingd->master: they initiated a dual-fundable channel
# 1/7
opening_dual_open_started,6200
opening_dual_open_started,,their_funding,struct amount_sat
opening_dual_open_started,,contrib_count,u16
opening_dual_open_started,,channel_flags,u8
opening_dual_open_started,,push_msat,struct amount_msat

# master->openingd: what we'd like to put into the channel (or a fail)
# 2/7
#include <wire/gen_peer_wire.h>
opening_dual_open_continue,6201
# if there's a problem trying to open this, we should fail
opening_dual_open_continue,,is_err,bool
opening_dual_open_continue,,our_funding,struct amount_sat
opening_dual_open_continue,,num_our_inputs,u16
opening_dual_open_continue,,our_inputs,num_our_inputs*struct input_info
opening_dual_open_continue,,num_our_outputs,u16
opening_dual_open_continue,,our_outputs,num_our_outputs*struct output_info

# openingd->master: their inputs + outputs
# 3/7
opening_dual_accepted,6202
opening_dual_accepted,,remote_funding_pubkey,struct pubkey
opening_dual_accepted,,num_their_inputs,u16
opening_dual_accepted,,their_inputs,num_their_inputs*struct input_info
opening_dual_accepted,,num_their_outputs,u16
opening_dual_accepted,,their_outputs,num_their_outputs*struct output_info

# master->openingd: continue, opening.
# 4/7
opening_dual_accepted_reply,6203

# openingd->master: their witness_stack, and signatures
# 5/7
opening_dual_funding_signed,6204
opening_dual_funding_signed,,pps,struct per_peer_state
opening_dual_funding_signed,,first_commit,struct bitcoin_tx
opening_dual_funding_signed,,first_commit_sig,struct bitcoin_signature
opening_dual_funding_signed,,num_witnesses,u16
opening_dual_funding_signed,,witness_stack,num_witnesses*struct witness_stack
opening_dual_funding_signed,,their_config,struct channel_config
opening_dual_funding_signed,,revocation_basepoint,struct pubkey
opening_dual_funding_signed,,payment_basepoint,struct pubkey
opening_dual_funding_signed,,htlc_basepoint,struct pubkey
opening_dual_funding_signed,,delayed_payment_basepoint,struct pubkey
opening_dual_funding_signed,,their_per_commit_point,struct pubkey
opening_dual_funding_signed,,remote_fundingkey,struct pubkey
opening_dual_funding_signed,,funding_txid,struct bitcoin_txid
opening_dual_funding_signed,,funding_txout,u16
opening_dual_funding_signed,,feerate_per_kw,u32
opening_dual_funding_signed,,feerate_per_kw_funding,u32
opening_dual_funding_signed,,our_channel_reserve_satoshis,struct amount_sat
opening_dual_funding_signed,,shutdown_len,u16
opening_dual_funding_signed,,shutdown_scriptpubkey,shutdown_len*u8

# master->openingd: 
# 6/7
opening_dual_funding_signed_reply,6205
opening_dual_funding_signed_reply,,num_witnesses,u16
opening_dual_funding_signed_reply,,witness_stack,num_witnesses*struct witness_stack

# openingd->master:
# 7/7
opening_dual_funding_completed,6206
opening_dual_funding_completed,,pps,struct per_peer_state

# master->openingd: let peer know that something went wrong, 
#                   and fail the channel establishment
opening_dual_failed,6210
opening_dual_failed,,reason,wirestring
opening_dual_failed,,is_err,bool

# master -> openingd: do you have a memleak?
msgtype,opening_dev_memleak,6033

msgtype,opening_dev_memleak_reply,6133
msgdata,opening_dev_memleak_reply,leak,bool,
